{"version":3,"file":"static/js/609.a7230e3a.chunk.js","mappings":"4MACA,EAAwB,oBAAxB,EAAoD,oBAApD,EAAiF,qB,8BC2DjF,EAtDa,WACT,IAAMA,GAAWC,EAAAA,EAAAA,MACnB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAQMC,EAAQ,WACZH,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAME,SAZW,SAAAC,GACjBA,EAAEC,iBACFV,GAASW,EAAAA,EAAAA,IAAiB,CAAER,KAAAA,EAAME,OAAAA,KAClCE,GACD,EAQC,WACE,mBAAOK,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXC,KAAK,OACLX,KAAK,OACLY,MAAOZ,EACPa,QAAQ,yHACRC,MAAM,yIACNC,SAAU,SAAAT,GACRL,EAAQK,EAAEU,OAAOJ,MAClB,EACDK,UAAQ,QAGZ,mBAAOR,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXC,KAAK,MACLX,KAAK,SACLY,MAAOV,EACPW,QAAQ,yFACRC,MAAM,+FACNC,SAAU,SAAAT,GACRH,EAAUG,EAAEU,OAAOJ,MACpB,EACDK,UAAQ,QAGZ,mBAAQR,UAAWC,EAAYC,KAAK,SAApC,2BAKL,E,UC1DD,EAAwB,sBCoBxB,EAfe,WACX,IAAMd,GAAWC,EAAAA,EAAAA,MAEjB,OACE,kBACEW,UAAWC,EACXC,KAAK,OACLX,KAAK,OACLkB,YAAY,wBACZL,QAAQ,yHACRE,SAAU,SAAAT,GAAC,OARMM,EAQWN,EAAEU,OAAOJ,MARXf,GAASsB,EAAAA,EAAAA,GAAeP,IAAjC,IAAAA,CAQN,GAGlB,ECnBYQ,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,ECAtBC,EAAsB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,ECCxC,GAAgB,GAAK,qBAAqB,GAAK,qBAAqB,OAAS,0BC+C7E,EApCiB,WACf,IAAMC,GAAYC,EAAAA,EAAAA,KAAY,SAAAN,GAAK,OAAIA,EAAMC,SAASI,SAAnB,IAC7B7B,GAAWC,EAAAA,EAAAA,MACXwB,GAAWK,EAAAA,EAAAA,IAAYP,GACvBK,GAASE,EAAAA,EAAAA,IAAYH,GACrBI,EAAsB,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAUG,QAAO,qBAAGzB,KAC5C6B,cAAcC,SAASL,EAAOI,cADW,IAM1CE,EAAQ,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAwBI,KAAI,YAA2B,IAAxBhC,EAAuB,EAAvBA,KAAMiC,EAAiB,EAAjBA,GAAI/B,EAAa,EAAbA,OACxD,OACE,gBAAIO,UAAWC,EAAAA,GAAiBV,KAAMiC,EAAtC,UACKjC,EADL,KACaE,GACX,mBACES,KAAK,SACLF,UAAWC,EAAAA,OACXwB,QAAS,kBAVI,SAAAD,GACnBpC,GAASsC,EAAAA,EAAAA,IAAoBF,GAC9B,CAQsBG,CAAaH,EAAnB,EAHX,iBAF0BA,EAW/B,IAKD,OAHAI,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAEF,gCACG6B,IAAa,uCACd,eAAIjB,UAAWC,EAAAA,KAAf,SAA0BqB,MAG/B,EC9CD,EAA4B,gCCiB5B,EAbqB,WACjB,OACI,+BACI,iBAAKtB,UAAWC,EAAhB,WACA,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,QAIX,C","sources":["webpack://react-homework-template/./src/components/modules/form/Form.module.css?686b","components/modules/form/Form.jsx","webpack://react-homework-template/./src/components/modules/filter/Filter.module.css?a48b","components/modules/filter/Filter.jsx","redux/contacts/contact-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/modules/contacts/Contacts.module.css?d498","components/modules/contacts/Contacts.jsx","webpack://react-homework-template/./src/components/pages/ContactsPage/ContactsPage.module.scss?529c","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Form_label__GnYen\",\"input\":\"Form_input__ywHuk\",\"button\":\"Form_button__AHD3c\"};","import React, { useState } from 'react';\nimport css from './Form.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { fetchAddContacts } from 'redux/contacts/contact-operations';\n\nconst Form = () => {\n    const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const formSubmit = e => {\n    e.preventDefault();\n    dispatch(fetchAddContacts({ name, number }))\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={e => {\n            setNumber(e.target.value);\n          }}\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default Form;\nForm.propTypes = { onSubmit: PropTypes.func };","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__ogkaj\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filter-slice';\nimport css from './Filter.module.css'\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const handleChange = value => dispatch(filterContacts(value));\n    return (\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name for search\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={e => handleChange(e.target.value)}\n      />\n    );\n}\n\nexport default Filter;\nFilter.propTypes = { onFilter: PropTypes.func };","export const getAllContacts = store => store.contacts.items","export const getFilteredContacts = store => store.filter;","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"Contacts_li__Fowzg\",\"ul\":\"Contacts_ul__tVJ9x\",\"button\":\"Contacts_button__i8mZi\"};","import { useSelector, useDispatch } from 'react-redux';\n// import { removeContact } from 'redux/contacts/contact-slice';\nimport { getAllContacts } from 'redux/contacts/contact-selectors';\nimport { getFilteredContacts } from 'redux/filter/filter-selectors';\nimport { useEffect } from 'react';\nimport {\n  fetchAllContacts,\n  fetchDeleteContacts,\n} from 'redux/contacts/contact-operations'\nimport PropTypes from 'prop-types';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const isLoading = useSelector(store => store.contacts.isLoading);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilteredContacts);\n  const filterContactsContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n  const handleDelete = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n  const elements = filterContactsContacts?.map(({ name, id, number }) => {\n    return (\n      <li className={css.li} key={id} name={id}>\n          {name}: {number}\n        <button\n          type=\"button\"\n          className={css.button}\n          onClick={() => handleDelete(id)}\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      <ul className={css.list}>{elements}</ul>\n    </>\n  );\n};\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDelete: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__ekSiL\"};","import Form from \"components/modules/form/Form\";\nimport Filter from \"components/modules/filter/Filter\";\nimport Contacts from \"components/modules/contacts/Contacts\";\nimport css from './ContactsPage.module.scss'\n\nconst ContactsPage = () => {\n    return (\n        <>\n            <div className={css.container}>\n            <h1>Phonebook</h1>\n            <Form />\n            <h2>Contacts</h2>\n            <Filter />\n            <Contacts />\n            </div>\n        </>\n    )\n}\nexport default ContactsPage;"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","reset","onSubmit","e","preventDefault","fetchAddContacts","className","css","type","value","pattern","title","onChange","target","required","placeholder","filterContacts","getAllContacts","store","contacts","items","getFilteredContacts","filter","isLoading","useSelector","filterContactsContacts","toLowerCase","includes","elements","map","id","onClick","fetchDeleteContacts","handleDelete","useEffect","fetchAllContacts"],"sourceRoot":""}